{"ast":null,"code":"var _jsxFileName = \"/Users/rishabh/rishabhcode/ReactJS/frontend-redis-app/src/components/Table.jsx\";\nimport React from 'react';\n\nconst RenderRow = props => {\n  return props.keys.map((key, index) => {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: props.data[key],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 16\n      }\n    }, props.data[key]);\n  });\n};\n\nconst useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = React.useState(config);\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...items];\n\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n\n        return 0;\n      });\n    }\n\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = key => {\n    let direction = 'ascending';\n\n    if (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  return {\n    items: sortedItems,\n    requestSort,\n    sortConfig\n  };\n};\n\nconst Table = props => {\n  let products = props.data;\n  const {\n    items,\n    requestSort,\n    sortConfig\n  } = useSortableData(products);\n\n  const getClassNamesFor = name => {\n    if (!sortConfig) {\n      return;\n    }\n\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  const getKeys = function (products) {\n    return Object.keys(products[0]);\n  };\n\n  const getHeader = function (products) {\n    var keys = getKeys(products);\n    return keys.map((key, index) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        onClick: () => console.log({\n          key\n        }, 'key'),\n        className: getClassNamesFor({\n          key\n        }),\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }\n      }, key.toUpperCase());\n    });\n  };\n\n  const getRowsData = function (products) {\n    var items = products;\n    var keys = getKeys(products);\n    return items.map((row, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(RenderRow, {\n        key: index,\n        data: row,\n        keys: keys,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 36\n        }\n      }));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, getHeader(items))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, getRowsData(items))));\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/rishabh/rishabhcode/ReactJS/frontend-redis-app/src/components/Table.jsx"],"names":["React","RenderRow","props","keys","map","key","index","data","useSortableData","items","config","sortConfig","setSortConfig","useState","sortedItems","useMemo","sortableItems","sort","a","b","direction","requestSort","Table","products","getClassNamesFor","name","undefined","getKeys","Object","getHeader","console","log","toUpperCase","getRowsData","row"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,SAAOA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAClC,wBAAO;AAAI,MAAA,GAAG,EAAEJ,KAAK,CAACK,IAAN,CAAWF,GAAX,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BH,KAAK,CAACK,IAAN,CAAWF,GAAX,CAA3B,CAAP;AACH,GAFM,CAAP;AAGH,CAJD;;AAMA,MAAMG,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAM,GAAG,IAAjB,KAA0B;AAC9C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,KAAK,CAACa,QAAN,CAAeH,MAAf,CAApC;AAEA,QAAMI,WAAW,GAAGd,KAAK,CAACe,OAAN,CAAc,MAAM;AACpC,QAAIC,aAAa,GAAG,CAAC,GAAGP,KAAJ,CAApB;;AACA,QAAIE,UAAU,KAAK,IAAnB,EAAyB;AACrBK,MAAAA,aAAa,CAACC,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB,YAAID,CAAC,CAACP,UAAU,CAACN,GAAZ,CAAD,GAAoBc,CAAC,CAACR,UAAU,CAACN,GAAZ,CAAzB,EAA2C;AACvC,iBAAOM,UAAU,CAACS,SAAX,KAAyB,WAAzB,GAAuC,CAAC,CAAxC,GAA4C,CAAnD;AACH;;AACD,YAAIF,CAAC,CAACP,UAAU,CAACN,GAAZ,CAAD,GAAoBc,CAAC,CAACR,UAAU,CAACN,GAAZ,CAAzB,EAA2C;AACvC,iBAAOM,UAAU,CAACS,SAAX,KAAyB,WAAzB,GAAuC,CAAvC,GAA2C,CAAC,CAAnD;AACH;;AACD,eAAO,CAAP;AACH,OARD;AASH;;AACD,WAAOJ,aAAP;AACH,GAdmB,EAcjB,CAACP,KAAD,EAAQE,UAAR,CAdiB,CAApB;;AAgBA,QAAMU,WAAW,GAAIhB,GAAD,IAAS;AACzB,QAAIe,SAAS,GAAG,WAAhB;;AACA,QACIT,UAAU,IACVA,UAAU,CAACN,GAAX,KAAmBA,GADnB,IAEAM,UAAU,CAACS,SAAX,KAAyB,WAH7B,EAIE;AACEA,MAAAA,SAAS,GAAG,YAAZ;AACH;;AACDR,IAAAA,aAAa,CAAC;AAAEP,MAAAA,GAAF;AAAOe,MAAAA;AAAP,KAAD,CAAb;AACH,GAVD;;AAYA,SAAO;AAAEX,IAAAA,KAAK,EAAEK,WAAT;AAAsBO,IAAAA,WAAtB;AAAmCV,IAAAA;AAAnC,GAAP;AACH,CAhCD;;AAkCA,MAAMW,KAAK,GAAIpB,KAAD,IAAW;AAErB,MAAIqB,QAAQ,GAAGrB,KAAK,CAACK,IAArB;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASY,IAAAA,WAAT;AAAsBV,IAAAA;AAAtB,MAAqCH,eAAe,CAACe,QAAD,CAA1D;;AACA,QAAMC,gBAAgB,GAAIC,IAAD,IAAU;AAC/B,QAAI,CAACd,UAAL,EAAiB;AACb;AACH;;AACD,WAAOA,UAAU,CAACN,GAAX,KAAmBoB,IAAnB,GAA0Bd,UAAU,CAACS,SAArC,GAAiDM,SAAxD;AACH,GALD;;AAOA,QAAMC,OAAO,GAAG,UAAUJ,QAAV,EAAoB;AAChC,WAAOK,MAAM,CAACzB,IAAP,CAAYoB,QAAQ,CAAC,CAAD,CAApB,CAAP;AACH,GAFD;;AAIA,QAAMM,SAAS,GAAG,UAAUN,QAAV,EAAoB;AAClC,QAAIpB,IAAI,GAAGwB,OAAO,CAACJ,QAAD,CAAlB;AACA,WAAOpB,IAAI,CAACC,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC5B,0BAAO;AAAI,QAAA,OAAO,EAAE,MAAMwB,OAAO,CAACC,GAAR,CAAY;AAAE1B,UAAAA;AAAF,SAAZ,EAAqB,KAArB,CAAnB;AAAgD,QAAA,SAAS,EAAEmB,gBAAgB,CAAC;AAAEnB,UAAAA;AAAF,SAAD,CAA3E;AAAsF,QAAA,GAAG,EAAEA,GAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiGA,GAAG,CAAC2B,WAAJ,EAAjG,CAAP;AACH,KAFM,CAAP;AAGH,GALD;;AAOA,QAAMC,WAAW,GAAG,UAAUV,QAAV,EAAoB;AACpC,QAAId,KAAK,GAAGc,QAAZ;AACA,QAAIpB,IAAI,GAAGwB,OAAO,CAACJ,QAAD,CAAlB;AACA,WAAOd,KAAK,CAACL,GAAN,CAAU,CAAC8B,GAAD,EAAM5B,KAAN,KAAgB;AAC7B,0BAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,KAAhB;AAAuB,QAAA,IAAI,EAAE4B,GAA7B;AAAkC,QAAA,IAAI,EAAE/B,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,CAAP;AACH,KAFM,CAAP;AAGH,GAND;;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK0B,SAAS,CAACpB,KAAD,CAAd,CADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKwB,WAAW,CAACxB,KAAD,CADhB,CAJJ,CADJ,CADJ;AAcH,CA5CD;;AAiDA,eAAea,KAAf","sourcesContent":["import React from 'react';\n\n\n\nconst RenderRow = (props) => {\n    return props.keys.map((key, index) => {\n        return <td key={props.data[key]}>{props.data[key]}</td>\n    })\n}\n\nconst useSortableData = (items, config = null) => {\n    const [sortConfig, setSortConfig] = React.useState(config);\n\n    const sortedItems = React.useMemo(() => {\n        let sortableItems = [...items];\n        if (sortConfig !== null) {\n            sortableItems.sort((a, b) => {\n                if (a[sortConfig.key] < b[sortConfig.key]) {\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\n                }\n                if (a[sortConfig.key] > b[sortConfig.key]) {\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\n                }\n                return 0;\n            });\n        }\n        return sortableItems;\n    }, [items, sortConfig]);\n\n    const requestSort = (key) => {\n        let direction = 'ascending';\n        if (\n            sortConfig &&\n            sortConfig.key === key &&\n            sortConfig.direction === 'ascending'\n        ) {\n            direction = 'descending';\n        }\n        setSortConfig({ key, direction });\n    };\n\n    return { items: sortedItems, requestSort, sortConfig };\n};\n\nconst Table = (props) => {\n\n    let products = props.data;\n    const { items, requestSort, sortConfig } = useSortableData(products);\n    const getClassNamesFor = (name) => {\n        if (!sortConfig) {\n            return;\n        }\n        return sortConfig.key === name ? sortConfig.direction : undefined;\n    };\n\n    const getKeys = function (products) {\n        return Object.keys(products[0]);\n    }\n\n    const getHeader = function (products) {\n        var keys = getKeys(products);\n        return keys.map((key, index) => {\n            return <th onClick={() => console.log({ key }, 'key')} className={getClassNamesFor({ key })} key={key}>{key.toUpperCase()}</th>\n        })\n    }\n\n    const getRowsData = function (products) {\n        var items = products;\n        var keys = getKeys(products);\n        return items.map((row, index) => {\n            return <tr key={index}><RenderRow key={index} data={row} keys={keys} /></tr>\n        })\n    }\n\n    return (\n        <div>\n            <table>\n                <thead>\n                    <tr>{getHeader(items)}</tr>\n                </thead>\n                <tbody>\n                    {getRowsData(items)}\n                </tbody>\n            </table>\n        </div>\n\n    );\n\n}\n\n\n\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}