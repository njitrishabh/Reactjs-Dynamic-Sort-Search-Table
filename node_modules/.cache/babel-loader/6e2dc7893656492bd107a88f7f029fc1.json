{"ast":null,"code":"import React, { Component } from 'react';\n\nclass Tablexml extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props, 'props'); // this.state = {\n    //     data: this.props.data,\n    //     searchString: ''\n    // };\n    // this.getHeader = this.getHeader.bind(this);\n    // this.getRowsData = this.getRowsData.bind(this);\n    // this.getKeys = this.getKeys.bind(this);\n    // this.onSort = this.onSort.bind(this);\n    // this.handleChange = this.handleChange.bind(this);\n  } // getKeys = function () {\n  //     return Object.keys(this.props.data[0]);\n  // }\n  // onSort(event, sortKey) {\n  //     const data = this.state.data;\n  //     data.sort((a, b) => {\n  //         if (a[sortKey.key] < b[sortKey.key]) {\n  //             return -1;\n  //         }\n  //         if (a[sortKey.key] > b[sortKey.key]) {\n  //             return 1;\n  //         }\n  //         return 0;\n  //     });\n  //     this.setState({ data });\n  // }\n  // getHeader = function () {\n  //     var keys = this.getKeys();\n  //     return keys.map((key, index) => {\n  //         return <th onClick={e => this.onSort(e, { key })} key={key}>{key.toUpperCase()}</th>\n  //     })\n  // }\n  // getRowsData = function (newdata) {\n  //     var items = newdata;\n  //     var keys = this.getKeys();\n  //     return items.map((row, index) => {\n  //         return <tr key={index}><RenderRow key={index} data={row} keys={keys} /></tr>\n  //     })\n  // }\n  // handleChange = event => {\n  //     this.setState({ searchString: event.target.value });\n  // };\n  // render() {\n  //     var newdata = this.state.data;\n  //     let searchString = this.state.searchString.trim().toLowerCase();\n  //     if (searchString.length > 0) {\n  //         var found = [];\n  //         newdata.forEach(record => {\n  //             Object.keys(record).forEach(function (key) {\n  //                 if (typeof record[key] == 'string') {\n  //                     if (record[key].toLowerCase().match(searchString)) {\n  //                         found.push(record)\n  //                     }\n  //                 }\n  //             })\n  //         });\n  //         newdata = found;\n  //     }\n  //     return (\n  //         <div>\n  //             <label>Filter Result</label>\n  //             <p></p>\n  //             <input\n  //                 type=\"text\"\n  //                 placeholder=\"Search\"\n  //                 value={this.state.searchString}\n  //                 onChange={this.handleChange}\n  //                 className=\"searchString\"\n  //             />\n  //             <table>\n  //                 {/* <thead>\n  //                     <tr>{this.getHeader()}</tr>\n  //                 </thead>\n  //                 <tbody>\n  //                     {this.getRowsData(newdata)}\n  //                 </tbody> */}\n  //             </table>\n  //         </div >\n  //     );\n  // }\n\n\n} // const RenderRow = (props) => {\n//     return props.keys.map((key, index) => {\n//         return <td key={props.data[key]}>{props.data[key]}</td>\n//     })\n// }\n\n\nexport default Tablexml;","map":{"version":3,"sources":["/Users/rishabh/rishabhcode/ReactJS/frontend-redis-app/src/components/Tablexml.jsx"],"names":["React","Component","Tablexml","constructor","props","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAE7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,OAAnB,EAFe,CAGf;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACH,GAf4B,CAiB7B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AA7F6B,C,CAgGjC;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Tablexml extends Component {\n\n    constructor(props) {\n        super(props);\n        console.log(props, 'props');\n        // this.state = {\n        //     data: this.props.data,\n        //     searchString: ''\n        // };\n\n        // this.getHeader = this.getHeader.bind(this);\n        // this.getRowsData = this.getRowsData.bind(this);\n        // this.getKeys = this.getKeys.bind(this);\n        // this.onSort = this.onSort.bind(this);\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    // getKeys = function () {\n    //     return Object.keys(this.props.data[0]);\n    // }\n\n    // onSort(event, sortKey) {\n    //     const data = this.state.data;\n    //     data.sort((a, b) => {\n    //         if (a[sortKey.key] < b[sortKey.key]) {\n    //             return -1;\n    //         }\n    //         if (a[sortKey.key] > b[sortKey.key]) {\n    //             return 1;\n    //         }\n    //         return 0;\n    //     });\n    //     this.setState({ data });\n    // }\n\n    // getHeader = function () {\n    //     var keys = this.getKeys();\n    //     return keys.map((key, index) => {\n    //         return <th onClick={e => this.onSort(e, { key })} key={key}>{key.toUpperCase()}</th>\n    //     })\n    // }\n\n    // getRowsData = function (newdata) {\n    //     var items = newdata;\n    //     var keys = this.getKeys();\n    //     return items.map((row, index) => {\n    //         return <tr key={index}><RenderRow key={index} data={row} keys={keys} /></tr>\n    //     })\n    // }\n\n\n    // handleChange = event => {\n    //     this.setState({ searchString: event.target.value });\n    // };\n\n    // render() {\n    //     var newdata = this.state.data;\n    //     let searchString = this.state.searchString.trim().toLowerCase();\n    //     if (searchString.length > 0) {\n    //         var found = [];\n    //         newdata.forEach(record => {\n    //             Object.keys(record).forEach(function (key) {\n    //                 if (typeof record[key] == 'string') {\n    //                     if (record[key].toLowerCase().match(searchString)) {\n    //                         found.push(record)\n    //                     }\n    //                 }\n    //             })\n    //         });\n    //         newdata = found;\n    //     }\n    //     return (\n    //         <div>\n    //             <label>Filter Result</label>\n    //             <p></p>\n    //             <input\n    //                 type=\"text\"\n    //                 placeholder=\"Search\"\n    //                 value={this.state.searchString}\n    //                 onChange={this.handleChange}\n    //                 className=\"searchString\"\n    //             />\n    //             <table>\n    //                 {/* <thead>\n    //                     <tr>{this.getHeader()}</tr>\n    //                 </thead>\n    //                 <tbody>\n    //                     {this.getRowsData(newdata)}\n    //                 </tbody> */}\n    //             </table>\n    //         </div >\n\n    //     );\n    // }\n}\n\n// const RenderRow = (props) => {\n//     return props.keys.map((key, index) => {\n//         return <td key={props.data[key]}>{props.data[key]}</td>\n//     })\n// }\n\nexport default Tablexml;"]},"metadata":{},"sourceType":"module"}