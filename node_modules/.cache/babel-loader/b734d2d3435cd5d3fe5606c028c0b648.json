{"ast":null,"code":"var _jsxFileName = \"/Users/rishabh/rishabhcode/ReactJS/frontend-redis-app/src/components/Table.jsx\";\nimport React from 'react';\n\nconst getKeys = function (products) {\n  return Object.keys(products[0]);\n};\n\nconst getHeader = function (products) {\n  var keys = getKeys(products);\n  return keys.map((key, index) => {\n    return /*#__PURE__*/React.createElement(\"th\", {\n      onClick: () => requestSort({\n        key\n      }),\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 16\n      }\n    }, key.toUpperCase());\n  });\n};\n\nconst getRowsData = function (products) {\n  var items = products;\n  var keys = getKeys(products);\n  return items.map((row, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(RenderRow, {\n      key: index,\n      data: row,\n      keys: keys,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 32\n      }\n    }));\n  });\n};\n\nconst RenderRow = props => {\n  return props.keys.map((key, index) => {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: props.data[key],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    }, props.data[key]);\n  });\n};\n\nconst requestSort = key => {\n  let direction = 'ascending';\n\n  if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n    direction = 'descending';\n  }\n\n  setSortConfig({\n    key,\n    direction\n  });\n};\n\nconst useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = React.useState(config);\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...items];\n\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n\n        return 0;\n      });\n    }\n\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = key => {\n    let direction = 'ascending';\n\n    if (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  return {\n    items: sortedItems,\n    requestSort,\n    sortConfig\n  };\n};\n\nconst Table = props => {\n  let products = props.data;\n  const {\n    items,\n    requestSort,\n    sortConfig\n  } = useSortableData(products);\n\n  const getClassNamesFor = name => {\n    if (!sortConfig) {\n      return;\n    }\n\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, getHeader(products))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, getRowsData(products))));\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/rishabh/rishabhcode/ReactJS/frontend-redis-app/src/components/Table.jsx"],"names":["React","getKeys","products","Object","keys","getHeader","map","key","index","requestSort","toUpperCase","getRowsData","items","row","RenderRow","props","data","direction","sortConfig","setSortConfig","useSortableData","config","useState","sortedItems","useMemo","sortableItems","sort","a","b","Table","getClassNamesFor","name","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst getKeys = function (products) {\n    return Object.keys(products[0]);\n}\n\nconst getHeader = function (products) {\n    var keys = getKeys(products);\n    return keys.map((key, index) => {\n        return <th onClick={() => requestSort({ key })} key={key}>{key.toUpperCase()}</th>\n    })\n}\n\nconst getRowsData = function (products) {\n    var items = products;\n    var keys = getKeys(products);\n    return items.map((row, index) => {\n        return <tr key={index}><RenderRow key={index} data={row} keys={keys} /></tr>\n    })\n}\n\nconst RenderRow = (props) => {\n    return props.keys.map((key, index) => {\n        return <td key={props.data[key]}>{props.data[key]}</td>\n    })\n}\n\nconst requestSort = key => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n        direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n}\n\nconst useSortableData = (items, config = null) => {\n    const [sortConfig, setSortConfig] = React.useState(config);\n\n    const sortedItems = React.useMemo(() => {\n        let sortableItems = [...items];\n        if (sortConfig !== null) {\n            sortableItems.sort((a, b) => {\n                if (a[sortConfig.key] < b[sortConfig.key]) {\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\n                }\n                if (a[sortConfig.key] > b[sortConfig.key]) {\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\n                }\n                return 0;\n            });\n        }\n        return sortableItems;\n    }, [items, sortConfig]);\n\n    const requestSort = (key) => {\n        let direction = 'ascending';\n        if (\n            sortConfig &&\n            sortConfig.key === key &&\n            sortConfig.direction === 'ascending'\n        ) {\n            direction = 'descending';\n        }\n        setSortConfig({ key, direction });\n    };\n\n    return { items: sortedItems, requestSort, sortConfig };\n};\n\nconst Table = (props) => {\n\n    let products = props.data;\n    const { items, requestSort, sortConfig } = useSortableData(products);\n    const getClassNamesFor = (name) => {\n        if (!sortConfig) {\n            return;\n        }\n        return sortConfig.key === name ? sortConfig.direction : undefined;\n    };\n\n    return (\n        <div>\n            <table>\n                <thead>\n                    <tr>{getHeader(products)}</tr>\n                </thead>\n                <tbody>\n                    {getRowsData(products)}\n                </tbody>\n            </table>\n        </div>\n\n    );\n}\n\n\n\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}